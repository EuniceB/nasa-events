{"version":3,"sources":["components/EventPin.jsx","components/Map.jsx","components/InformationOverlay.jsx","components/Alert.jsx","components/Dropdown.jsx","utils.js","components/Filters.jsx","components/Header.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["categoryIcon","wildfires","drought","dustHaze","earthquakes","floods","landslides","manmade","seaLakeIce","severeStorms","snow","tempExtremes","volcanoes","waterColor","categoryColor","EventPin","event","className","icon","category","width","color","Map","events","showEventInfo","resetEvent","useState","center","setCenter","mapEvents","setMapEvents","console","log","useEffect","cleanEvents","filter","ev","geometry","some","g","type","map","latestGeometry","sort","a","b","Date","date","id","description","title","lat","coordinates","lng","categories","length","sumOfLatLon","reduce","result","curr","calculateCenter","mapHeight","document","getElementsByTagName","window","innerHeight","clientHeight","style","height","bootstrapURLKeys","key","v","onChildClick","onClick","zoom","InformationOverlay","toLocaleDateString","Alert","alert","Dropdown","options","onChange","defaultOptionIndex","open","setOpen","selectedOption","setSelectedOption","JSON","stringify","max","Math","Number","MIN_SAFE_INTEGER","tabIndex","onBlur","option","value","onSelectedOption","defaultProps","calculateDaysSince","now","diff","floor","getTime","timePeriods","days","Filters","setSelectedCategory","setSelectedTimePeriod","push","getFullYear","getMonth","addMonthAnYearToTimePeriodOptions","Header","href","Home","selectedEvent","setSelectedEvent","timePeriod","App","setEvents","setCategories","selectedCategory","selectedTimePeriod","setAlert","showAlert","message","setTimeout","url","axios","get","data","updateEvents","fetchCategories","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9cb62a5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Icon from '@iconify/react';\nimport wildfires from '@iconify/icons-mdi/fire';\nimport severeStorms from '@iconify/icons-mdi/windsock';\nimport seaLakeIce from '@iconify/icons-mdi/snowflake';\nimport drought from '@iconify/icons-mdi/water-off';\nimport dustHaze from '@iconify/icons-mdi/google-podcast';\nimport earthquakes from '@iconify/icons-mdi/waveform'\nimport floods from '@iconify/icons-mdi/flood';\nimport landslides from '@iconify/icons-mdi/slope-downhill';\nimport manmade from '@iconify/icons-mdi/foot-print';\nimport snow from '@iconify/icons-mdi/weather-snowy';\nimport tempExtremes from '@iconify/icons-mdi/temperature-alert';\nimport volcanoes from '@iconify/icons-mdi/image-size-select-actual';\nimport waterColor from '@iconify/icons-mdi/waves';\n\nconst categoryIcon = {\n    wildfires,\n    drought,\n    dustHaze,\n    earthquakes,\n    floods,\n    landslides,\n    manmade,\n    seaLakeIce,\n    severeStorms,\n    snow,\n    tempExtremes,\n    volcanoes,\n    waterColor\n}\n\nconst categoryColor = {\n    wildfires: 'red',\n    drought: 'yellow',\n    dustHaze: 'brown',\n    earthquakes: 'black',\n    floods: 'blue',\n    landslides: 'brown',\n    manmade: 'black',\n    seaLakeIce: 'blue',\n    severeStorms: 'black',\n    snow: 'blue',\n    tempExtremes: 'red',\n    volcanoes: 'red',\n    waterColor: 'purple'\n}\n\nconst EventPin = ({ event }) => <div className=\"pin\">\n    <Icon icon={categoryIcon[event.category]} width=\"24px\" color={categoryColor[event.category]} />\n</div>;\n\nEventPin.propTypes = {\n    event: PropTypes.object.isRequired,\n    showEventInfo: PropTypes.func.isRequired,\n}\n\nexport default EventPin;","import React, { useState, useEffect } from \"react\";\nimport EventPin from \"./EventPin\";\nimport GoogleMap from \"google-map-react\";\nimport PropTypes from \"prop-types\";\n\nconst getCleanEvents = (dirtyEvents) => {\n  return dirtyEvents\n    .filter((ev) => ev.geometry.some((g) => g.type === \"Point\"))\n    .map((event) => {\n      const latestGeometry = event.geometry.sort(\n        (a, b) => new Date(b.date) - new Date(a.date)\n      )[0];\n\n      return {\n        id: event.id,\n        description: event.description,\n        title: event.title,\n        lat: latestGeometry.coordinates[1],\n        lng: latestGeometry.coordinates[0],\n        date: latestGeometry.date,\n        category: event.categories[0].id,\n      };\n    });\n};\n\nconst calculateCenter = (events) => {\n  const sumOfLatLon = events.reduce(\n    (result, curr) => [result[0] + curr.lat, result[1] + curr.lng],\n    [0, 0]\n  );\n  return [sumOfLatLon[0] / events.length, sumOfLatLon[1] / events.length];\n};\n\nconst Map = ({ events, showEventInfo, resetEvent }) => {\n  const [center, setCenter] = useState([36.22592, -35.97138]);\n  const [mapEvents, setMapEvents] = useState([]);\n\n  console.log(\"Yupiie!\")\n\n  useEffect(() => {\n    const cleanEvents = getCleanEvents(events);\n    setMapEvents(cleanEvents);\n\n    if (cleanEvents.length > 0) {\n      setCenter(calculateCenter(cleanEvents));\n    }\n  }, [events]);\n\n  const renderEvents = () => {\n    return mapEvents.map((event) => {\n      return (\n        <EventPin\n          key={event.id}\n          lat={event.lat}\n          lng={event.lng}\n          event={event}\n          showEventInfo={showEventInfo}\n        />\n      );\n    });\n  };\n\n  let mapHeight = 0;\n  if (document.getElementsByTagName(\"header\").length > 0) {\n    mapHeight =\n      window.innerHeight -\n      document.getElementsByTagName(\"header\")[0].clientHeight +\n      \"px\";\n  }\n\n  return (\n    <div style={{ width: \"100vw\", height: mapHeight }}>\n      <GoogleMap\n        bootstrapURLKeys={{\n          key: \"AIzaSyDSghDK0XWTOPMyvT2rvgPWycmNjfcnN7Y\",\n          v: \"3.43\",\n        }}\n        center={center}\n        onChildClick={showEventInfo}\n        onClick={() => {\n          console.log(\"Hey\");\n          resetEvent();\n        }}\n        zoom={3}\n      >\n        {renderEvents()}\n      </GoogleMap>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  events: PropTypes.array,\n  showEventInfo: PropTypes.func,\n  resetEvent: PropTypes.func,\n};\n\nexport default Map;\n","const InformationOverlay = ( { event: { title, description, date } }) => {\n    console.log(title);\n    return <div className=\"card information-overlay\">\n        <h2>{title}</h2>\n        <p>{new Date(date).toLocaleDateString()}</p>\n        {description && <p>{description}</p>}\n    </div>\n}\nexport default InformationOverlay;","const Alert = ({ alert }) => (\n  <div className=\"alert\">\n    <div className=\"card\">{alert}</div>\n  </div>\n);\nexport default Alert;\n","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\n\nconst Dropdown = ({ title, options, onChange, defaultOptionIndex }) => {\n  const [open, setOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  useEffect(() => {\n    if (options.length > defaultOptionIndex) {\n      setSelectedOption(options[defaultOptionIndex]);\n    }\n  }, [JSON.stringify(options), options, defaultOptionIndex]);\n\n  const onSelectedOption = (option) => {\n    onChange(option);\n    setSelectedOption(option);\n    setOpen(false);\n  };\n\n  const width =\n    options.reduce(\n      (max, curr) => Math.max(max, curr.title.length),\n      Number.MIN_SAFE_INTEGER\n    ) *\n      9 +\n    30;\n\n  return (\n    <div\n      className={`dropdown${open ? \" open\" : \"\"}`}\n      style={{ width: `${width}px` }}\n      tabIndex=\"0\"\n      onBlur={() => setOpen(false)}\n    >\n      <div className=\"dropdown-header\" onClick={() => setOpen(!open)}>\n        <div className=\"dropdown-trigger\">\n          {selectedOption ? selectedOption.title : title}\n        </div>\n        <div className=\"dropdown-arrow\"></div>\n      </div>\n      {open && (\n        <ul>\n          {options.map((option) => (\n            <li\n              key={option.id}\n              value={option.id}\n              onClick={() => onSelectedOption(option)}\n            >\n              {option.title}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  title: PropTypes.string,\n  options: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nDropdown.defaultProps = {\n  title: \"Options\",\n  options: [],\n  onChange: null,\n  defaultOptionIndex: null,\n};\n\nexport default Dropdown;\n","const calculateDaysSince = (date) => {\n  const now = new Date();\n  const diff = Math.floor(date.getTime() - now.getTime());\n  const day = 1000 * 60 * 60 * 24;\n\n  return -Math.floor(diff / day);\n};\nexport { calculateDaysSince };\n","import { useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport { calculateDaysSince } from \"../utils\";\n\nconst timePeriods = [\n  { id: 1, title: \"Today\", days: 1 },\n  { id: 2, title: \"Last 7 days\", days: 7 },\n  { id: 3, title: \"Last 2 weeks\", days: 15 },\n];\n\nconst addMonthAnYearToTimePeriodOptions = () => {\n  const now = new Date();\n  timePeriods.push({\n    title: \"This month\",\n    days: calculateDaysSince(new Date(now.getFullYear(), now.getMonth(), 1)),\n    id: 4,\n  });\n  timePeriods.push({\n    title: \"This year\",\n    days: calculateDaysSince(new Date(now.getFullYear(), 0, 1)),\n    id: 5,\n  });\n};\n\nconst Filters = ({\n  categories,\n  setSelectedCategory,\n  setSelectedTimePeriod,\n}) => {\n  useEffect(() => {\n    addMonthAnYearToTimePeriodOptions();\n  }, []);\n\n  return (\n    <div className=\"filters\">\n      {categories && categories.length > 0 && (\n        <Dropdown\n          title={\"Category\"}\n          options={categories}\n          defaultOptionIndex={10}\n          onChange={setSelectedCategory}\n        />\n      )}\n      {timePeriods && timePeriods.length === 5 && (\n        <Dropdown\n          title={\"Time period\"}\n          options={timePeriods}\n          defaultOptionIndex={4}\n          onChange={setSelectedTimePeriod}\n        />\n      )}\n    </div>\n  );\n};\nexport default Filters;\n","import Filters from \"./Filters\";\n\nconst Header = ({ categories, setSelectedCategory, setSelectedTimePeriod }) => {\n  return (\n    <header>\n      <div>\n        <h1>NASA Events</h1>\n        <div className=\"desc\">Developed by <a href=\"https://eunice.dev\">Eunice Beijinho</a>, powered by NASA.</div>\n      </div>\n      <Filters\n        categories={categories}\n        setSelectedCategory={setSelectedCategory}\n        setSelectedTimePeriod={setSelectedTimePeriod}\n      />\n    </header>\n  );\n};\nexport default Header;\n","import Map from \"./Map\";\nimport InformationOverlay from \"./InformationOverlay\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"./Alert\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\n\nconst Home = ({\n  categories,\n  events,\n  alert,\n  setSelectedCategory,\n  setSelectedTimePeriod,\n}) => {\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  const setCategory = (category) => {\n    setSelectedEvent(null);\n    setSelectedCategory(category);\n  }\n\n  const setTimePeriod = (timePeriod) => {\n    setSelectedEvent(null);\n    setSelectedTimePeriod(timePeriod);\n  }\n\n  return (\n    <>\n      <Header categories={categories} setSelectedCategory={setCategory} setSelectedTimePeriod={setTimePeriod}/>\n      <Map events={events} showEventInfo={(event) => setSelectedEvent(event)} resetEvent={() => setSelectedEvent(null)} />\n      {selectedEvent && <InformationOverlay event={selectedEvent} />}\n      {alert && <Alert alert={alert} />}\n    </>\n  );\n};\n\nHome.propTypes = {\n  events: PropTypes.array,\n  categories: PropTypes.array,\n  setSelectedCategory: PropTypes.func,\n  setSelectedTimePeriod: PropTypes.func,\n  alert: PropTypes.string,\n};\n\nHome.defaultProps = {\n  events: [],\n  categories: [],\n  setSelectedCategory: null,\n  setSelectedTimePeriod: null,\n  alert: null,\n};\n\nexport default Home;\n","import Home from \"./components/Home\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { calculateDaysSince } from \"./utils\";\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState({\n    title: \"Volcanoes\",\n    id: \"volcanoes\",\n  });\n  const now = new Date();\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState({\n    title: \"This year\",\n    days: calculateDaysSince(new Date(now.getFullYear(), 0, 1)),\n    id: 5,\n  });\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message) => {\n    setAlert(message);\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    const updateEvents = async () => {\n      let url = selectedCategory\n        ? `https://eonet.sci.gsfc.nasa.gov/api/v3/categories/${selectedCategory.id}`\n        : \"https://eonet.sci.gsfc.nasa.gov/api/v3/events\";\n      url += selectedTimePeriod ? \"?days=\" + selectedTimePeriod.days : \"\";\n      const { data } = await axios.get(url);\n      setEvents(data.events);\n      if (data.events.length === 0) {\n        showAlert(\"We found no events. Try another category or time.\");\n      } else {\n        showAlert(`${data.events.length} events found.`);\n      }\n    };\n\n    updateEvents();\n  }, [selectedCategory, selectedTimePeriod]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const { data } = await axios.get(\n        \"https://eonet.sci.gsfc.nasa.gov/api/v3/categories\"\n      );\n      setCategories(data.categories);\n    };\n\n    fetchCategories();\n  }, []);\n\n  return (\n    <Home\n      events={events}\n      categories={categories}\n      setSelectedCategory={(category) => setSelectedCategory(category)}\n      setSelectedTimePeriod={(timePeriod) => setSelectedTimePeriod(timePeriod)}\n      alert={alert}\n    />\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}